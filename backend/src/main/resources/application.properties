server.port=${PORT:8080}
spring.application.name=StockMonitor

# Base de datos
# Lee las variables del entorno de Docker Compose
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/stockmonitor_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# RabbitMQ
# CORRECCIÓN: Lee las variables individuales que le pasa Docker Compose
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}

# JPA
# CORRECCIÓN: Lee la variable del entorno de Docker Compose
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# APIs externas
finnhub.api.key=${FINNHUB_API_KEY}
finnhub.api.url=https://finnhub.io/api/v1/quote

# Frontend
frontend.url=${FRONTEND_URL:http://localhost:5173}

# Pool de conexiones Hikari
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000